exit
env
1
env
request.env
ENV
environment
exit
BCrypt::Password.new(credentials[params[:username]]) == params[:password]
BCrypt::Password.new(credentials[params[:username]])
credentials[params[:username]]
credentials = load_user_credentials
credentials
params[:username]
credentials[params[:username]]
params[:username]
:username
session[:username]
BCrypt::Password.new(credentials[session[:username]])
redentials = load_user_credentials
continue
credentials_path
continue
@users_hash[username] == password
@users_hash[username] == session[password]
@users_hash[username]
password
username
@users_hash
continue
session[:username]
:username
continue
session[:username]
@users_hash[session[:username]]
@users_hash
continue
users_hash.include?("admin")
users_hash[session[:username]]
continue
users_hash[session[:username].to_sym]
users_hash
session[:username]
:username
continue
users_hash
users_hash[session[:username].to_sym]
session[:username].to_sym
session[:username]
:username
continue
session[:username].to_sym
continue
users_hash["admin"]
session[:username]
er=#<Puma
users_hash[session[:username]]
continue
users_hash[session[:username]]
users_hash
continue
params[:password]
params[:username]
continue
params[:username]
exit
ENV
get last_response["Location"]
last_response["Location"]
continue
file_path
continue
"#{data_path}/new/name"
data_path
continue
<a href="/<%= file %>"><%= file %></a>
file
@files
continue
@files
pattern
continue
get "test/data/history.txt"
get "./test/data/history.txt"
system "pwd"
system "pwd:
continue
ls test/data/history.txt 
ls data/
system "pwd"
pwd
continue
@content
continue
@content
continue
@content
continue
@content
continue
@content
